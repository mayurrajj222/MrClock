// Generated by Dagger (https://dagger.dev).
package clock.util.helper;

import android.content.Context;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class StopwatchNotificationHelper_Factory implements Factory<StopwatchNotificationHelper> {
  private final Provider<Context> applicationContextProvider;

  public StopwatchNotificationHelper_Factory(Provider<Context> applicationContextProvider) {
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public StopwatchNotificationHelper get() {
    return newInstance(applicationContextProvider.get());
  }

  public static StopwatchNotificationHelper_Factory create(
      Provider<Context> applicationContextProvider) {
    return new StopwatchNotificationHelper_Factory(applicationContextProvider);
  }

  public static StopwatchNotificationHelper newInstance(Context applicationContext) {
    return new StopwatchNotificationHelper(applicationContext);
  }
}
