// Generated by Dagger (https://dagger.dev).
package clock.data.workManager.factory;

import com.yassineabou.clock.data.manager.StopwatchManager;
import com.yassineabou.clock.util.helper.StopwatchNotificationHelper;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class StopwatchWorkerFactory_Factory implements Factory<StopwatchWorkerFactory> {
  private final Provider<StopwatchManager> stopwatchManagerProvider;

  private final Provider<StopwatchNotificationHelper> stopwatchNotificationHelperProvider;

  public StopwatchWorkerFactory_Factory(Provider<StopwatchManager> stopwatchManagerProvider,
      Provider<StopwatchNotificationHelper> stopwatchNotificationHelperProvider) {
    this.stopwatchManagerProvider = stopwatchManagerProvider;
    this.stopwatchNotificationHelperProvider = stopwatchNotificationHelperProvider;
  }

  @Override
  public StopwatchWorkerFactory get() {
    return newInstance(stopwatchManagerProvider.get(), stopwatchNotificationHelperProvider.get());
  }

  public static StopwatchWorkerFactory_Factory create(
      Provider<StopwatchManager> stopwatchManagerProvider,
      Provider<StopwatchNotificationHelper> stopwatchNotificationHelperProvider) {
    return new StopwatchWorkerFactory_Factory(stopwatchManagerProvider, stopwatchNotificationHelperProvider);
  }

  public static StopwatchWorkerFactory newInstance(StopwatchManager stopwatchManager,
      StopwatchNotificationHelper stopwatchNotificationHelper) {
    return new StopwatchWorkerFactory(stopwatchManager, stopwatchNotificationHelper);
  }
}
