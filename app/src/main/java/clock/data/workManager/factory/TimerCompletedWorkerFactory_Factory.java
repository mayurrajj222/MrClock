// Generated by Dagger (https://dagger.dev).
package clock.data.workManager.factory;

import com.yassineabou.clock.data.manager.TimerManager;
import com.yassineabou.clock.util.helper.MediaPlayerHelper;
import com.yassineabou.clock.util.helper.TimerNotificationHelper;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TimerCompletedWorkerFactory_Factory implements Factory<TimerCompletedWorkerFactory> {
  private final Provider<MediaPlayerHelper> mediaPlayerHelperProvider;

  private final Provider<TimerNotificationHelper> timerNotificationHelperProvider;

  private final Provider<TimerManager> timerManagerProvider;

  public TimerCompletedWorkerFactory_Factory(Provider<MediaPlayerHelper> mediaPlayerHelperProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider,
      Provider<TimerManager> timerManagerProvider) {
    this.mediaPlayerHelperProvider = mediaPlayerHelperProvider;
    this.timerNotificationHelperProvider = timerNotificationHelperProvider;
    this.timerManagerProvider = timerManagerProvider;
  }

  @Override
  public TimerCompletedWorkerFactory get() {
    return newInstance(mediaPlayerHelperProvider.get(), timerNotificationHelperProvider.get(), timerManagerProvider.get());
  }

  public static TimerCompletedWorkerFactory_Factory create(
      Provider<MediaPlayerHelper> mediaPlayerHelperProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider,
      Provider<TimerManager> timerManagerProvider) {
    return new TimerCompletedWorkerFactory_Factory(mediaPlayerHelperProvider, timerNotificationHelperProvider, timerManagerProvider);
  }

  public static TimerCompletedWorkerFactory newInstance(MediaPlayerHelper mediaPlayerHelper,
      TimerNotificationHelper timerNotificationHelper, TimerManager timerManager) {
    return new TimerCompletedWorkerFactory(mediaPlayerHelper, timerNotificationHelper, timerManager);
  }
}
