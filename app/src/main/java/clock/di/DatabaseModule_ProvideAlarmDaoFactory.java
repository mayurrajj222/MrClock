// Generated by Dagger (https://dagger.dev).
package clock.di;

import com.yassineabou.clock.data.local.AlarmDao;
import com.yassineabou.clock.data.local.AlarmDatabase;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideAlarmDaoFactory implements Factory<AlarmDao> {
  private final Provider<AlarmDatabase> alarmDatabaseProvider;

  public DatabaseModule_ProvideAlarmDaoFactory(Provider<AlarmDatabase> alarmDatabaseProvider) {
    this.alarmDatabaseProvider = alarmDatabaseProvider;
  }

  @Override
  public AlarmDao get() {
    return provideAlarmDao(alarmDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideAlarmDaoFactory create(
      Provider<AlarmDatabase> alarmDatabaseProvider) {
    return new DatabaseModule_ProvideAlarmDaoFactory(alarmDatabaseProvider);
  }

  public static AlarmDao provideAlarmDao(AlarmDatabase alarmDatabase) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAlarmDao(alarmDatabase));
  }
}
