// Generated by Dagger (https://dagger.dev).
package clock.di;

import android.content.Context;

import com.yassineabou.clock.data.local.AlarmDatabase;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideAlarmDatabaseFactory implements Factory<AlarmDatabase> {
  private final Provider<Context> appProvider;

  public DatabaseModule_ProvideAlarmDatabaseFactory(Provider<Context> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public AlarmDatabase get() {
    return provideAlarmDatabase(appProvider.get());
  }

  public static DatabaseModule_ProvideAlarmDatabaseFactory create(Provider<Context> appProvider) {
    return new DatabaseModule_ProvideAlarmDatabaseFactory(appProvider);
  }

  public static AlarmDatabase provideAlarmDatabase(Context app) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAlarmDatabase(app));
  }
}
