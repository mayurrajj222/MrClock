// Generated by Dagger (https://dagger.dev).
package clock.data.manager;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TimerManager_Factory implements Factory<TimerManager> {
  private final Provider<WorkRequestManager> workRequestManagerProvider;

  public TimerManager_Factory(Provider<WorkRequestManager> workRequestManagerProvider) {
    this.workRequestManagerProvider = workRequestManagerProvider;
  }

  @Override
  public TimerManager get() {
    return newInstance(workRequestManagerProvider.get());
  }

  public static TimerManager_Factory create(
      Provider<WorkRequestManager> workRequestManagerProvider) {
    return new TimerManager_Factory(workRequestManagerProvider);
  }

  public static TimerManager newInstance(WorkRequestManager workRequestManager) {
    return new TimerManager(workRequestManager);
  }
}
