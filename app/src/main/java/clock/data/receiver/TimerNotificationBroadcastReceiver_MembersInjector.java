// Generated by Dagger (https://dagger.dev).
package clock.data.receiver;

import com.yassineabou.clock.data.manager.TimerManager;
import com.yassineabou.clock.data.manager.WorkRequestManager;
import com.yassineabou.clock.util.helper.TimerNotificationHelper;

import javax.inject.Provider;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TimerNotificationBroadcastReceiver_MembersInjector implements MembersInjector<TimerNotificationBroadcastReceiver> {
  private final Provider<TimerManager> timerManagerProvider;

  private final Provider<TimerNotificationHelper> timerNotificationHelperProvider;

  private final Provider<WorkRequestManager> workRequestManagerProvider;

  public TimerNotificationBroadcastReceiver_MembersInjector(
      Provider<TimerManager> timerManagerProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider,
      Provider<WorkRequestManager> workRequestManagerProvider) {
    this.timerManagerProvider = timerManagerProvider;
    this.timerNotificationHelperProvider = timerNotificationHelperProvider;
    this.workRequestManagerProvider = workRequestManagerProvider;
  }

  public static MembersInjector<TimerNotificationBroadcastReceiver> create(
      Provider<TimerManager> timerManagerProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider,
      Provider<WorkRequestManager> workRequestManagerProvider) {
    return new TimerNotificationBroadcastReceiver_MembersInjector(timerManagerProvider, timerNotificationHelperProvider, workRequestManagerProvider);
  }

  @Override
  public void injectMembers(TimerNotificationBroadcastReceiver instance) {
    injectTimerManager(instance, timerManagerProvider.get());
    injectTimerNotificationHelper(instance, timerNotificationHelperProvider.get());
    injectWorkRequestManager(instance, workRequestManagerProvider.get());
  }

  @InjectedFieldSignature("com.yassineabou.clock.data.receiver.TimerNotificationBroadcastReceiver.timerManager")
  public static void injectTimerManager(TimerNotificationBroadcastReceiver instance,
      TimerManager timerManager) {
    instance.timerManager = timerManager;
  }

  @InjectedFieldSignature("com.yassineabou.clock.data.receiver.TimerNotificationBroadcastReceiver.timerNotificationHelper")
  public static void injectTimerNotificationHelper(TimerNotificationBroadcastReceiver instance,
      TimerNotificationHelper timerNotificationHelper) {
    instance.timerNotificationHelper = timerNotificationHelper;
  }

  @InjectedFieldSignature("com.yassineabou.clock.data.receiver.TimerNotificationBroadcastReceiver.workRequestManager")
  public static void injectWorkRequestManager(TimerNotificationBroadcastReceiver instance,
      WorkRequestManager workRequestManager) {
    instance.workRequestManager = workRequestManager;
  }
}
