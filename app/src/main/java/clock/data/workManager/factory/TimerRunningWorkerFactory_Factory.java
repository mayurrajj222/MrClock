// Generated by Dagger (https://dagger.dev).
package clock.data.workManager.factory;

import com.yassineabou.clock.data.manager.TimerManager;
import com.yassineabou.clock.util.helper.TimerNotificationHelper;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TimerRunningWorkerFactory_Factory implements Factory<TimerRunningWorkerFactory> {
  private final Provider<TimerManager> timerManagerProvider;

  private final Provider<TimerNotificationHelper> timerNotificationHelperProvider;

  public TimerRunningWorkerFactory_Factory(Provider<TimerManager> timerManagerProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider) {
    this.timerManagerProvider = timerManagerProvider;
    this.timerNotificationHelperProvider = timerNotificationHelperProvider;
  }

  @Override
  public TimerRunningWorkerFactory get() {
    return newInstance(timerManagerProvider.get(), timerNotificationHelperProvider.get());
  }

  public static TimerRunningWorkerFactory_Factory create(
      Provider<TimerManager> timerManagerProvider,
      Provider<TimerNotificationHelper> timerNotificationHelperProvider) {
    return new TimerRunningWorkerFactory_Factory(timerManagerProvider, timerNotificationHelperProvider);
  }

  public static TimerRunningWorkerFactory newInstance(TimerManager timerManager,
      TimerNotificationHelper timerNotificationHelper) {
    return new TimerRunningWorkerFactory(timerManager, timerNotificationHelper);
  }
}
