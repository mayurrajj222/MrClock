// Generated by Dagger (https://dagger.dev).
package clock.data.workManager.factory;

import com.yassineabou.clock.data.manager.WorkRequestManager;
import com.yassineabou.clock.data.repository.AlarmRepository;
import com.yassineabou.clock.util.helper.AlarmNotificationHelper;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AlarmCheckerWorkerFactory_Factory implements Factory<AlarmCheckerWorkerFactory> {
  private final Provider<AlarmRepository> alarmRepositoryProvider;

  private final Provider<AlarmNotificationHelper> alarmNotificationHelperProvider;

  private final Provider<WorkRequestManager> workRequestManagerProvider;

  public AlarmCheckerWorkerFactory_Factory(Provider<AlarmRepository> alarmRepositoryProvider,
      Provider<AlarmNotificationHelper> alarmNotificationHelperProvider,
      Provider<WorkRequestManager> workRequestManagerProvider) {
    this.alarmRepositoryProvider = alarmRepositoryProvider;
    this.alarmNotificationHelperProvider = alarmNotificationHelperProvider;
    this.workRequestManagerProvider = workRequestManagerProvider;
  }

  @Override
  public AlarmCheckerWorkerFactory get() {
    return newInstance(alarmRepositoryProvider.get(), alarmNotificationHelperProvider.get(), workRequestManagerProvider.get());
  }

  public static AlarmCheckerWorkerFactory_Factory create(
      Provider<AlarmRepository> alarmRepositoryProvider,
      Provider<AlarmNotificationHelper> alarmNotificationHelperProvider,
      Provider<WorkRequestManager> workRequestManagerProvider) {
    return new AlarmCheckerWorkerFactory_Factory(alarmRepositoryProvider, alarmNotificationHelperProvider, workRequestManagerProvider);
  }

  public static AlarmCheckerWorkerFactory newInstance(AlarmRepository alarmRepository,
      AlarmNotificationHelper alarmNotificationHelper, WorkRequestManager workRequestManager) {
    return new AlarmCheckerWorkerFactory(alarmRepository, alarmNotificationHelper, workRequestManager);
  }
}
