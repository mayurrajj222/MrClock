// Generated by Dagger (https://dagger.dev).
package clock.data.manager;

import android.content.Context;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class WorkRequestManager_Factory implements Factory<WorkRequestManager> {
  private final Provider<Context> applicationContextProvider;

  public WorkRequestManager_Factory(Provider<Context> applicationContextProvider) {
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public WorkRequestManager get() {
    return newInstance(applicationContextProvider.get());
  }

  public static WorkRequestManager_Factory create(Provider<Context> applicationContextProvider) {
    return new WorkRequestManager_Factory(applicationContextProvider);
  }

  public static WorkRequestManager newInstance(Context applicationContext) {
    return new WorkRequestManager(applicationContext);
  }
}
